name: Build, Test, and Generate .runtimeconfig.json

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-and-generate-runtimeconfig:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      # Build and generate .runtimeconfig.json for api project
      - name: Build and Generate .runtimeconfig.json for api project
        run: |
          dotnet restore Twit.WebAPI/Twit.WebAPI.csproj
          dotnet publish -c Release -o publish/Twit.WebAPI --self-contained -r linux-x64 /p:PublishReadyToRun=true /p:PublishSingleFile=true

      # Build and generate .runtimeconfig.json for core project
      - name: Build and Generate .runtimeconfig.json for core project
        run: |
          dotnet restore Twit.Core/Twit.Core.csproj
          dotnet publish -c Release -o publish/Twit.Core --self-contained -r linux-x64 /p:PublishReadyToRun=true /p:PublishSingleFile=true

      # Build and generate .runtimeconfig.json for infrastructure project
      - name: Build and Generate .runtimeconfig.json for infrastructure project
        run: |
          dotnet restore Twit.Infrastructure/Twit.Infrastructure.csproj
          dotnet publish -c Release -o publish/Twit.Infrastructure --self-contained -r linux-x64 /p:PublishReadyToRun=true /p:PublishSingleFile=true

      # Build and generate .runtimeconfig.json for test project
      - name: Build and Generate .runtimeconfig.json for test project
        run: |
          dotnet restore Twit.Test/Twit.Test.csproj
          dotnet publish -c Release -o publish/Twit.Test --self-contained -r linux-x64 /p:PublishReadyToRun=true /p:PublishSingleFile=true

      # Remaining steps for testing...
